export const translations: Record<string, string> = {
  'Search in diagram': '在图表中搜索',
  'Activate hand tool': '激活手形工具',
  'Activate lasso tool': '激活套索工具',
  'Activate create/remove space tool': '激活创建/移除空间工具',
  'Activate global connect tool': '激活全局连接工具',
  'Create start event': '创建开始事件',
  'Create intermediate/boundary event': '创建中间/边界事件',
  'Create end event': '创建结束事件',
  'Create gateway': '创建网关',
  'Create task': '创建任务',
  'Create data object reference': '创建数据对象引用',
  'Create data store reference': '创建数据存储引用',
  'Create expanded sub-process': '创建展开的子流程',
  'Create pool/participant': '创建池/参与者',
  'Create group': '创建组',
  'General': '通用',
  'Documentation': '文档',
  'Compensation': '补偿',
  'Error': '错误',
  'Link': '链接',
  'Message': '消息',
  'Multi-instance': '多实例',
  'Signal': '信号',
  'Escalation': '升级',
  'Timer': '定时器',
  'History cleanup': '历史清理',
  'Tasklist': '任务列表',
  'Candidate starter': '候选启动者',
  'Implementation': '实现',
  'External task': '外部任务',
  'Process variables': '流程变量',
  'Errors': '错误',
  'User assignment': '用户分配',
  'Forms': '表单',
  'Form fields': '表单字段',
  'Task listeners': '任务监听器',
  'Start initiator': '启动发起者',
  'Script': '脚本',
  'Condition': '条件',
  'Called element': '调用元素',
  'Asynchronous continuations': '异步继续',
  'Job execution': '作业执行',
  'In mapping propagation': '输入映射传播',
  'In mappings': '输入映射',
  'Inputs': '输入',
  'Connector inputs': '连接器输入',
  'Out mapping propagation': '输出映射传播',
  'Out mappings': '输出映射',
  'Outputs': '输出',
  'Connector outputs': '连接器输出',
  'Execution listeners': '执行监听器',
  'Extension properties': '扩展属性',
  'Field injections': '字段注入',
  'Business key': '业务键',
  'Process': '流程',
  'Name': '名称',
  'This maps to the process definition key.': '这映射到流程定义键。',
  'ID': 'ID',
  'Version tag': '版本标签',
  'Executable': '可执行',
  'Element documentation': '元素文档',
  'Time to live': '存活时间',
  'Startable': '可启动',
  'Candidate starter groups': '候选启动组',
  'Specify more than one group as a comma separated list.': '指定多个组，用逗号分隔。',
  'Candidate starter users': '候选启动用户',
  'Specify more than one user as a comma separated list.': '指定多个用户，用逗号分隔。',
  'Priority': '优先级',
  'ID must be unique.': 'ID必须唯一。',
  'Append end event': '追加结束事件',
  'Append gateway': '追加网关',
  'Append task': '追加任务',
  'Append intermediate/boundary event': '追加中间/边界事件',
  'Intermediate throw event': '中间抛出事件',
  'End event': '结束事件',
  'Message start event': '消息开始事件',
  'Timer start event': '定时器开始事件',
  'Conditional start event': '条件开始事件',
  'Signal start event': '信号开始事件',
  'Change element': '更改元素',
  'Add text annotation': '添加文本注释',
  'Connect to other element': '连接到其他元素',
  'Delete': '删除',
  'Start Event': '开始事件',
  'Type': '类型',
  '<none>': '<无>',
  'Camunda Forms': 'Camunda表单',
  'Embedded or External Task Forms': '嵌入式或外部任务表单',
  'Generated Task Forms': '生成的任务表单',
  'Initiator': '发起者',
  'Before': '之前',
  'After': '之后',
  'Start event': '开始事件',
  'Message intermediate catch event': '消息中间捕获事件',
  'Message intermediate throw event': '消息中间抛出事件',
  'Timer intermediate catch event': '定时器中间捕获事件',
  'Escalation intermediate throw event': '升级中间抛出事件',
  'Conditional intermediate catch event': '条件中间捕获事件',
  'Link intermediate catch event': '链接中间捕获事件',
  'Link intermediate throw event': '链接中间抛出事件',
  'Compensation intermediate throw event': '补偿中间抛出事件',
  'Signal intermediate catch event': '信号中间捕获事件',
  'Signal intermediate throw event': '信号中间抛出事件',
  'Intermediate Throw Event': '中间抛出事件',
  'Message end event': '消息结束事件',
  'Escalation end event': '升级结束事件',
  'Error end event': '错误结束事件',
  'Compensation end event': '补偿结束事件',
  'Signal end event': '信号结束事件',
  'Terminate end event': '终止结束事件',
  'End Event': '结束事件',
  'Parallel gateway': '并行网关',
  'Inclusive gateway': '包容网关',
  'Complex gateway': '复杂网关',
  'Event-based gateway': '基于事件的网关',
  'Exclusive Gateway': '排他网关',
  'User task': '用户任务',
  'Service task': '服务任务',
  'Send task': '发送任务',
  'Receive task': '接收任务',
  'Manual task': '手动任务',
  'Business rule task': '业务规则任务',
  'Script task': '脚本任务',
  'Call activity': '调用活动',
  'Sub-process (collapsed)': '子流程（折叠）',
  'Sub-process (expanded)': '子流程（展开）',
  'Parallel multi-instance': '并行多实例',
  'Sequential multi-instance': '顺序多实例',
  'Loop': '循环',
  'Task': '任务',
  'Transaction': '事务',
  'Event sub-process': '事件子流程',
  'Ad-hoc': '临时',
  'Expanded Sub Process': '展开的子流程',
  'Data store reference': '数据存储引用',
  'Collection': '集合',
  'Connect using data input association': '使用数据输入关联连接',
  'Data Object Reference': '数据对象引用',
  'Data object reference': '数据对象引用',
  'Data Store Reference': '数据存储引用',
  'Add lane above': '在上方添加泳道',
  'Divide into two lanes': '分成两个泳道',
  'Divide into three lanes': '分成三个泳道',
  'Add lane below': '在下方添加泳道',
  'Empty pool/participant (removes content)': '清空池/参与者（移除内容）',
  'Participant multiplicity': '参与者多重性',
  'Participant': '参与者',
  'Participant Name': '参与者名称',
  'Participant ID': '参与者ID',
  'Process ID': '流程ID',
  'Process name': '流程名称',
  'Process documentation': '流程文档',
  'Collaboration': '协作',
  'Group': '组',
  'Connect using association': '使用关联连接',
  'Text Annotation': '文本注释',
  'Message Intermediate Catch Event': '消息中间捕获事件',
  'Global message reference': '全局消息引用',
  'Create new ...': '创建新...',
  'Signal Intermediate Throw Event': '信号中间抛出事件',
  'Global signal reference': '全局信号引用',
  'Propagate all variables': '传播所有变量',
  'User Task': '用户任务',
  'Assignee': '分配给',
  'Candidate groups': '候选组',
  'Candidate users': '候选用户',
  'Due date': '到期日期',
  // eslint-disable-next-line no-template-curly-in-string
  'The due date as an EL expression (e.g. ${someDate}) or an ISO date (e.g. 2015-06-26T09:54:00).': '到期日期，可以是EL表达式（例如${someDate}）或ISO日期（例如2015-06-26T09:54:00）。',
  'Follow up date': '跟进日期',
  // eslint-disable-next-line no-template-curly-in-string
  'The follow up date as an EL expression (e.g. ${someDate}) or an ISO date (e.g. 2015-06-26T09:54:00).': '跟进日期，可以是EL表达式（例如${someDate}）或ISO日期（例如2015-06-26T09:54:00）。',
  'Service Task': '服务任务',
  'Java class': 'Java类',
  'Expression': '表达式',
  'Delegate expression': '委托表达式',
  'External': '外部',
  'Connector': '连接器',
  'Send Task': '发送任务',
  'Receive Task': '接收任务',
  'Loop cardinality': '循环基数',
  'Completion condition': '完成条件',
  'Element variable': '元素变量',
  'Asynchronous before': '异步之前',
  'Asynchronous after': '异步之后',
  'Exclusive gateway': '排他网关',
  'Inclusive Gateway': '包容网关',
  'Complex Gateway': '复杂网关',
  'Append receive task': '追加接收任务',
  'Append message intermediate catch event': '追加消息中间捕获事件',
  'Append timer intermediate catch event': '追加定时器中间捕获事件',
  'Append conditional intermediate catch event': '追加条件中间捕获事件',
  'Append signal intermediate catch event': '追加信号中间捕获事件',
  'Event Based Gateway': '基于事件的网关',
  'Timer Intermediate Catch Event': '定时器中间捕获事件',
  'Date': '日期',
  'Duration': '持续时间',
  'Cycle': '周期',
  'Retry time cycle': '重试时间周期',
  'Conditional Intermediate Catch Event': '条件中间捕获事件',
  'Variable name': '变量名称',
  'Specify more than one variable change event as a comma separated list. Variable change events are:': '指定多个变量变更事件，用逗号分隔。变量变更事件包括：',
  'Documentation: Variable events': '文档：变量事件',
  'Variable events': '变量事件',
  'Condition Expression': '条件表达式',
  'Escalation End Event': '升级结束事件',
  'Global escalation reference': '全局升级引用',
  'Signal End Event': '信号结束事件',
  'Sub-process': '子流程',
  'Collapsed Sub Process': '折叠的子流程',
  'Open {element}': '打开{元素}',
  'flow elements must be children of pools/participants': '流程元素必须是池/参与者的子元素',
  'Message End Event': '消息结束事件',
  'Error End Event': '错误结束事件',
  'Global error reference': '全局错误引用',
  'Compensate End Event': '补偿结束事件',
  'Wait for completion': '等待完成',
  'Activity reference': '活动引用',
  'Terminate End Event': '终止结束事件',
}

export default function translate(template: keyof typeof translations, replacements: { [key: string]: string }) {
  replacements = replacements || {}

  const translation = translations[template] || template

  return translation.replace(/\{([^}]+)\}/g, (_, key) => {
    return replacements[key] || `{${key}}`
  })
}

export const TranslateModule = {
  translate: ['value', translate],
}
